on:
  workflow_dispatch:
    inputs:
      rust_version:
        description: "Version of Rust to recompress."
        type: string
        required: true
      github_tag:
        description: "Tag to upload the release to."
        type: string
        required: true
  
env:
  XZ_OPT: "-T0"

name: Rust

jobs:
  recompress_rust:
    name: Recompress Rust
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu # linux
          - aarch64-unknown-linux-gnu # linux arm
          - x86_64-apple-darwin # apple intel
          - aarch64-apple-darwin # apple m-series
          - x86_64-pc-windows-msvc # windows
          - aarch64-pc-windows-msvc # windows arm
        component:
          - "rustc"
          - "cargo"
          - "rustfmt"
          - "rust-std"
          - "clippy"
          - "llvm-tools"
          - "rustc-dev"
        include:
          - target: "wasm32-unknown-unknown"
            component: "rust-std"

    steps:
      - name: Download Rust Components
        run: |
          mkdir downloads
          mkdir artifacts

          component=${{ matrix.component }}
          target=${{ matrix.target }}
          version=${{ inputs.rust_version }}

          cd downloads

          if [[ $version =~ ^(nightly|beta) ]]; then
            IFS='/' read -r channel date <<< "$version"
            export full_name="$component-$channel-$target"
            export url_prefix=https://static.rust-lang.org/dist/$date
          else
            echo "STABLE"
            export full_name="$component-$version-$target"
            export url_prefix=https://static.rust-lang.org/dist
          fi
          
          xz_name="$full_name.tar.xz"
          wget "$url_prefix/$xz_name"
          
          tar -xJf $xz_name
          tar -cf - $full_name | zstd --ultra -22 -o "../artifacts/$full_name.tar.zst"

      - name: Download rust-src Component
        if: matrix.component == 'rustc' && matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          component="rust-src"
          version=${{ inputs.rust_version }}

          cd downloads

          if [[ $version =~ ^(nightly|beta) ]]; then
            IFS='/' read -r channel date <<< "$version"
            export full_name="$component-$channel"
            export url_prefix=https://static.rust-lang.org/dist/$date
          else
            echo "STABLE"
            export full_name="$component-$version"
            export url_prefix=https://static.rust-lang.org/dist
          fi
          
          xz_name="$full_name.tar.xz"
          wget "$url_prefix/$xz_name"
          
          tar -xJf $xz_name
          tar -cf - $full_name | zstd --ultra -22 -o "../artifacts/$full_name.tar.zst"

      - name: Determine Release Tag
        run: |
          RELEASE_TAG="rust-${{ inputs.rust_version }}"
          if [ -n "${{ inputs.github_tag }}" ]; then
            RELEASE_TAG="${{ inputs.github_tag }}"
          fi
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Upload zstd Compressed Artifacts to Release
        uses: svenstaro/upload-release-action@v2
        with:
          file: "artifacts/*.tar.zst"
          file_glob: true
          tag: ${{ env.RELEASE_TAG }}
          overwrite: true
